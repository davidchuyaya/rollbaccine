#!/bin/bash
# Script used to modify all tests generated by ACE.
# Tests were generated with the following script: python3 ace.py -l 1 -n True -d False -t xfstest
# In order to recreate the tests, run the following commands in the seq1_nested directory generated by ACE, then compress it with tar and upload to https://github.com/davidchuyaya/crashmonkey/releases/tag/rollbaccine

# Create group.list file, with all tests belonging in the "auto" group
touch group.list
for i in {1..587};
do
  # Skip tests 525 to 529, since they try to move directories to subdirectories of themselves
  if (( $i < 525 || $i > 529 )); then
    echo "$i auto" >> group.list
  fi
done

# Remove the flag that requires us to be on raw Linux
sed -i '/_supported_os Linux/d' *

# Modify the tests to check state against the backup, instead of umounting and remounting
# Replace this line in general_stat:
    # while (( "$#" )); do
# With the following:
    # prefix=$1
    # shift
    # while (( "$#" )); do
sed -i 's/while\(.*\)/prefix=\$1\n\tshift\n\twhile\1/g' *

# Replace this line in general_stat:
    # local file="$1"
# With the following:
    # local file="$prefix/$1"
sed -i 's/local file="\$1"/local file="\$prefix\/\$1"/g' *

# Replace these lines in check_consistency:
	# before=$(general_stat "$@")
	# _flakey_drop_and_remount
	# after=$(general_stat "$@")
# With the following:
    # before=$(general_stat $SCRATCH_MNT "$@")
    # _flakey_drop_and_remount
    # sudo mount -o ro,noload /dev/mapper/rollbaccine2 /mnt/newfsbackup
    # after=$(general_stat /mnt/newfsbackup "$@")
    # sudo umount /dev/mapper/rollbaccine2
    
sed -i 's/before=.*/before=\$\(general_stat\ \$SCRATCH_MNT \"\$@\"\)/g' *
sed -i 's/_flakey_drop_and_remount/_flakey_drop_and_remount\n\tsudo mount -o ro,noload \/dev\/mapper\/rollbaccine2 \/mnt\/newfsbackup/g' *
sed -i 's/after=.*/after=\$\(general_stat\ \/mnt\/newfsbackup \"\$@\"\)\n\tsudo umount \/dev\/mapper\/rollbaccine2/g' *

# Replace these lines:
    # stat "$stat_opt" "$file"
# With the following:
    # stat "$stat_opt" "$file" | sed 's~/mnt/newfsbackup~~g' | sed 's~/mnt/newfs~~g'
# So that the same file from /mnt/newfs and /mnt/newfsbackup don't appear as 2 different files
sed -i 's#stat "\$stat_opt" "\$file"#stat "\$stat_opt" "\$file" \| sed '"'"'s~\/mnt\/newfsbackup~~g'"'"' \| sed '"'"'s~\/mnt\/newfs~~g'"'"'#g' *

# Delete this line, for a similar reason as above:
    # echo "-- $file --"
sed -i 's/echo "-- \$file --"//g' *